# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Colour variables to make things pretty
RED="\e[0;31m"
YELLOW="\e[0;33m"
BOLDMAGENTA="\e[1;35m"
GREEN="\e[0;32m"
BOLDGREEN="\e[1;32m"
ENDCOLOR="\e[0m"


# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Enable Bash completion
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# Load directory list color profiles
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# Basic Settings - All Environments
HISTCONTROL=ignoredups:ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend
shopt -s checkwinsize
set show-all-if-ambiguous on
export EDITOR=vim

# Aliases
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ls='ls -h --color=auto'
alias diff='diff --color=auto'
alias rm='rm -i'
alias cp='cp -rfv'
alias df='pydf||df -h'
alias path='echo -e ${PATH//:/\\n}'
alias mount='mount | column -t'
alias openports='netstat -tulanp'
alias wget='wget -c'
alias term='echo $TERM'
alias powershell='pwsh'

# For NPM
NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$PATH:$NPM_PACKAGES/bin"

# For Go
export GOROOT=/usr/lib/go
export GOPATH=$HOME/.go
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH

# For C#
export DOTNET_CLI_TELEMETRY_OPTOUT=1

# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# Set the path
PATH=${PATH}:/sbin
PATH=${PATH}:/usr/sbin
PATH=${PATH}:/usr/local/bin
PATH=${PATH}:/usr/local/sbin
PATH=${PATH}:/opt/nessus/sbin
PATH=${PATH}:$HOME/.local/bin
PATH=${PATH}:$HOME/.private/scripts
PATH=${PATH}:$HOME/dotfiles/scripts
PATH=${PATH}:$HOME/dotfiles/scripts/hack
PATH=${PATH}:$HOME/dotfiles/scripts/update-kali
PATH=${PATH}:$HOME/dotfiles/scripts/recon
export PATH

# Environment-specific settings ===============================================

# === Debian / Kali / Ubuntu ===
if [[ `uname -s` == Linux* ]] && [ ! -f /mnt/c/Windows/System32/wsl.exe ]; then
    clear
    echo -ne $BOLDGREEN">>> "$ENDCOLOR; echo "Debian / Kali / Ubuntu"
    alias update='sudo apt update &&       \
                  sudo apt full-upgrade && \
                  sudo apt autoremove'
fi

# === WSL ===
if [ -f /mnt/c/Windows/System32/wsl.exe ]; then
    clear
    echo -ne $BOLDGREEN">>> "$ENDCOLOR; echo "Windows Subsystem for Linux"
    alias update='sudo apt update &&       \
                  sudo apt full-upgrade && \
                  sudo apt autoremove'

    export DISPLAY=localhost:0.0
fi

# Adding git status to prompt =================================================
function git_color {
    local git_status="$(git status 2> /dev/null)"

    if [[ ! $git_status =~ "clean" ]]; then
        echo -e $RED
    elif [[ $git_status =~ "Your branch is ahead of" ]]; then
        echo -e $YELLOW
    elif [[ $git_status =~ "nothing to commit" ]]; then
        echo -e $GREEN
    else
        echo -e $BOLDMAGENTA
    fi
}

function git_branch {
    local git_status="$(git status 2> /dev/null)"
    local on_branch="On branch ([^${IFS}]*)"
    local on_commit="HEAD detached at ([^${IFS}]*)"

    if [[ $git_status =~ $on_branch ]]; then
        local branch=${BASH_REMATCH[1]}
        echo " ($branch)"
    elif [[ $git_status =~ $on_commit ]]; then
        local commit=${BASH_REMATCH[1]}
        echo " ($commit)"
    fi
}

# Set a colour prompt =========================================================

if [ "$EUID" -eq 0 ]; then
    PS1="$RED\u"     # User (root)
else
    PS1="$GREEN\u"   # User (normal)
fi
PS1+="$BOLDGREEN@"   # @
PS1+="$GREEN\h "     # Host
PS1+="$BOLDGREEN("   # Open Bracket
PS1+="$YELLOW\w"     # Working Directory
PS1+="$BOLDGREEN)"   # Close Bracket
PS1+="$ENDCOLOR"     # End Color

# Add Git Status
PS1+="\[\$(git_color)\]"   # Colors git status
PS1+="\$(git_branch)"      # Prints current branch
PS1+="$ENDCOLOR "          # Ends prompt

# Things to do if you AREN'T root =============================================
if [ "$EUID" -ne 0 ]; then

    # Aliases
    alias fdisk='sudo fdisk'
    alias service='sudo service'
    alias dmesg='sudo dmesg'
    alias systemctl='sudo systemctl'

    vim () {
        if [ ! -f $1 ] || [ -w $1 ]; then /usr/bin/vim $@;
        else sudo /usr/bin/vim $@;
        fi
    }

    # Install Ruby Gems without root
    export GEM_HOME=$HOME/.gems
    export PATH=$HOME/.gems/bin:$PATH

    # Run Private Commands that apply to all machines
    if [ -f $HOME/.private/scripts/private_bash_settings ]; then
        . $HOME/.private/scripts/private_bash_settings
    fi
fi

# Set the title of the terminal
function title {
    if [ -z "$1" ]
        then
            title=${PWD##*/} # current directory
        else
            title=$1 # first param
        fi
        echo -n -e "\033]0;$title\007"
}

# Hacking stuff ====================
getlinks() {
	gau $1 -subs | \
	grep "=" | \
	egrep -iv ".(jpg|jpeg|gif|css|tif|tiff|png|ttf|woff|woff2|ico|pdf|svg|txt|js)" | \
	qsreplace -a
}

sqlicheck() {
	getlinks $1 | python3 /opt/DSSS/dsss.py
}


# WSL
cd
