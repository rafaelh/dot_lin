# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Enable programmable completion features
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

# Colour variables to make things pretty
RED="\e[0;31m"
YELLOW="\e[0;33m"
OCHRE="\e[38;5;95m"
# BLUE="\e[0;34m"
# WHITE="\e[0;37m"
GREEN="\033[1;32m"
ENDCOLOR="\e[0m"

# Basic Settings - All Environments
HISTCONTROL=ignoredups:ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000
shopt -s histappend
shopt -s checkwinsize
set show-all-if-ambiguous on

export DOTNET_CLI_TELEMETRY_OPTOUT=1
export EDITOR=vim
export PAGER=most

alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias ls='ls -h --color=auto'
alias grep='grep --color=auto'
alias rm='rm -i'
alias cp='cp -rfv'
alias df='pydf||df -h'
alias path='echo -e ${PATH//:/\\n}'
alias mount='mount | column -t'
alias openports='netstat -tulanp'
alias wget='wget -c'
alias term='echo $TERM'
alias powershell='pwsh'
alias enso='ssh admin@52.63.174.213'      # Auth by private key
alias broken='sudo systemctl list-units --state=failed'
alias publicip="dig +short myip.opendns.com @resolver1.opendns.com"


# For Python & Docker
export DOCKER_HOST=tcp://localhost:2375

# For NPM
NPM_PACKAGES="${HOME}/.npm-packages"
export PATH="$PATH:$NPM_PACKAGES/bin"

# For Go
export GOROOT=/usr/lib/go
export GOPATH=$HOME/go
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH

# Less Colors for Man Pages
export LESS_TERMCAP_mb=$'\E[01;31m'       # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'  # begin bold
export LESS_TERMCAP_me=$'\E[0m'           # end mode
export LESS_TERMCAP_se=$'\E[0m'           # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'    # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'           # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# Load color profiles for directory listing
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# Environment-specific settings ===============================================

# === Fedora Aliases ===
if [ -f /etc/redhat-release ]; then
    echo -ne $GREEN">>> "$ENDCOLOR; echo "RedHat / CentOS / Fedora"
    alias update-grub='sudo grub2-mkconfig -o /boot/efi/EFI/fedora/grub.cfg'
fi

# === Ubuntu/Debian Specific ===
if [[ `uname -s` == Linux* ]] && [ ! -d /mnt/c/ ]; then
    echo -ne "$GREEN"">>> ""$ENDCOLOR"; echo "Debian / Kali / Ubuntu"
    alias update='sudo apt update &&         \
                 sudo apt upgrade &&         \
                 sudo apt dist-upgrade &&    \
                 sudo apt autoremove'
    alias autoupdate='sudo apt update &&     \
                 sudo apt -y upgrade &&      \
                 sudo apt -y dist-upgrade && \
                 sudo apt -y autoremove'

fi

# === WSL Specific ===
if [ -d /mnt/c/ ]; then
    echo -ne $GREEN">>> "$ENDCOLOR; echo "Windows Subsystem for Linux"
    export DISPLAY=localhost:0.0
    alias update='sudo apt update &&         \
                 sudo apt upgrade &&         \
                 sudo apt dist-upgrade &&    \
                 sudo apt autoremove'
fi

# Adding git status to prompt =================================================
function git_color {
    local git_status="$(git status 2> /dev/null)"

    if [[ ! $git_status =~ "clean"  ]]; then
        echo -e $RED
    elif [[ $git_status =~ "Your branch is ahead of"  ]]; then
        echo -e $YELLOW
    elif [[ $git_status =~ "nothing to commit"  ]]; then
        echo -e $GREEN
    else
        echo -e $OCHRE
    fi
}

function git_branch {
    local git_status="$(git status 2> /dev/null)"
    local on_branch="On branch ([^${IFS}]*)"
    local on_commit="HEAD detached at ([^${IFS}]*)"

    if [[ $git_status =~ $on_branch  ]]; then
        local branch=${BASH_REMATCH[1]}
        echo " ($branch)"
    elif [[ $git_status =~ $on_commit  ]]; then
        local commit=${BASH_REMATCH[1]}
        echo " ($commit)"
    fi
}

# Things to do if you ARE root ================================================
if [ "$EUID" -eq 0 ]; then

    # Set a colour prompt
    PS1='\[\e[1;31m\][\[\e[0;31m\]\u\[\e[1;31m\]@\[\e[0;31m\]\h\[\e[1;31m\]] '
    PS1+='[\[\e[0;33m\]\w\[\e[1;31m\]]\$\[\e[0m\]' # Working Directory

    # Set additional Directories for inclusion in the Path
    export PATH=$PATH:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/root/dotfiles/scripts:/root/dotfiles/scripts/update-kali:/root/dotfiles/scripts/recon

    # Aliases
    alias code="code --user-data-dir=\"/root/.vscode-root\""

    # Run Private Commands
    if [ -f /root/.private ]; then
        echo -ne $GREEN">>> "$ENDCOLOR; echo "Untracked commands loaded from ~/.private"
        . /root/.private
    fi
fi

# Things to do if you AREN'T root =============================================
if [ "$EUID" -ne 0 ]; then

    # Set a colour prompt
    PS1='\[\e[1;32m\][\[\e[0;32m\]\u\[\e[1;32m\]@\[\e[0;32m\]\h\[\e[1;32m\]] '
    PS1+='[\[\e[0;33m\]\w\[\e[1;32m\]]\$\[\e[0m\]' # Working Directory

    # Aliases
    alias fdisk='sudo fdisk'
    alias service='sudo service'

    # Set additional Directories for inclusion in the Path
    export PATH=$PATH:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/$USER/.local/bin:/home/$USER/dotfiles/scripts:/home/$USER/dotfiles/scripts/update-kali:/home/$USER/dotfiles/scripts/recon

    vim () { 
        if [ ! -f $1 ] || [ -w $1 ]; then /usr/bin/vim $@;
        else sudo /usr/bin/vim $@;
        fi
    }

    # Install Ruby Gems without root
    export GEM_HOME=$HOME/.gems
    export PATH=$HOME/.gems/bin:$PATH

    # Run Private Commands specific to the machine
    if [ -f /home/$USER/.private ]; then
        echo -ne $GREEN">>> "$ENDCOLOR; echo "Untracked commands loaded from ~/.private"
        . /home/$USER/.private
    fi

    # Run Private Commands that apply to all machines
    if [ -f gdrive/Computers/Private_Bash.sh ]; then
        . gdrive/Computers/Private_Bash.sh
    fi
fi

# Add Git Status ==============================================================
PS1+="\[\$(git_color)\]"                         # Colors git status
PS1+="\$(git_branch)"                            # Prints current branch
PS1+="$ENDCOLOR "                                # Ends prompt
